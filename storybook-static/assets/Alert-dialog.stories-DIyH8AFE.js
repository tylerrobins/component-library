import{j as t}from"./jsx-runtime-CGpYA4L6.js";import{r as l}from"./index-CleY8y_P.js";import{c as X}from"./index-BUwirNCq.js";import{u as y,a as Z}from"./index-1PiYJVay.js";import{c as N,T as ee,O as ae,W as te,C as oe,a as re,D as le,b as h,R as se,P as ie}from"./index-B1VQWqoB.js";import{c as ne}from"./index-CRjgN0eO.js";import{c as n}from"./utils-C-5SdYIA.js";import{b as _,B as ce}from"./button-Civr03sU.js";import"./_commonjsHelpers-Cpj98o6Y.js";import"./index-C2jgcCTd.js";import"./index-DF5SYaCP.js";import"./index-Ad4uHoMG.js";import"./index-FvTp1rED.js";import"./index-Bb4qSo10.js";var j="AlertDialog",[de,Be]=X(j,[N]),i=N(),C=e=>{const{__scopeAlertDialog:a,...o}=e,r=i(a);return t.jsx(se,{...r,...o,modal:!0})};C.displayName=j;var pe="AlertDialogTrigger",R=l.forwardRef((e,a)=>{const{__scopeAlertDialog:o,...r}=e,s=i(o);return t.jsx(ee,{...s,...r,ref:a})});R.displayName=pe;var ge="AlertDialogPortal",T=e=>{const{__scopeAlertDialog:a,...o}=e,r=i(a);return t.jsx(ie,{...r,...o})};T.displayName=ge;var me="AlertDialogOverlay",b=l.forwardRef((e,a)=>{const{__scopeAlertDialog:o,...r}=e,s=i(o);return t.jsx(ae,{...s,...r,ref:a})});b.displayName=me;var c="AlertDialogContent",[ue,Ae]=de(c),w=l.forwardRef((e,a)=>{const{__scopeAlertDialog:o,children:r,...s}=e,u=i(o),p=l.useRef(null),U=y(a,p),A=l.useRef(null);return t.jsx(te,{contentName:c,titleName:E,docsSlug:"alert-dialog",children:t.jsx(ue,{scope:o,cancelRef:A,children:t.jsxs(oe,{role:"alertdialog",...u,...s,ref:U,onOpenAutoFocus:ne(s.onOpenAutoFocus,d=>{var f;d.preventDefault(),(f=A.current)==null||f.focus({preventScroll:!0})}),onPointerDownOutside:d=>d.preventDefault(),onInteractOutside:d=>d.preventDefault(),children:[t.jsx(Z,{children:r}),t.jsx(De,{contentRef:p})]})})})});w.displayName=c;var E="AlertDialogTitle",S=l.forwardRef((e,a)=>{const{__scopeAlertDialog:o,...r}=e,s=i(o);return t.jsx(re,{...s,...r,ref:a})});S.displayName=E;var P="AlertDialogDescription",O=l.forwardRef((e,a)=>{const{__scopeAlertDialog:o,...r}=e,s=i(o);return t.jsx(le,{...s,...r,ref:a})});O.displayName=P;var fe="AlertDialogAction",$=l.forwardRef((e,a)=>{const{__scopeAlertDialog:o,...r}=e,s=i(o);return t.jsx(h,{...s,...r,ref:a})});$.displayName=fe;var M="AlertDialogCancel",I=l.forwardRef((e,a)=>{const{__scopeAlertDialog:o,...r}=e,{cancelRef:s}=Ae(M,o),u=i(o),p=y(a,s);return t.jsx(h,{...u,...r,ref:p})});I.displayName=M;var De=({contentRef:e})=>{const a=`\`${c}\` requires a description for the component to be accessible for screen reader users.

You can add a description to the \`${c}\` by passing a \`${P}\` component as a child, which also benefits sighted users by adding visible context to the dialog.

Alternatively, you can use your own component as a description by assigning it an \`id\` and passing the same value to the \`aria-describedby\` prop in \`${c}\`. If the description is confusing or duplicative for sighted users, you can use the \`@radix-ui/react-visually-hidden\` primitive as a wrapper around your description component.

For more information, see https://radix-ui.com/primitives/docs/components/alert-dialog`;return l.useEffect(()=>{var r;document.getElementById((r=e.current)==null?void 0:r.getAttribute("aria-describedby"))||console.warn(a)},[a,e]),null},ve=C,xe=R,ye=T,B=b,F=w,H=$,z=I,L=S,k=O;const G=ve,Ne=xe,he=ye,W=l.forwardRef(({className:e,...a},o)=>t.jsx(B,{className:n("fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",e),...a,ref:o}));W.displayName=B.displayName;const V=l.forwardRef(({className:e,...a},o)=>t.jsxs(he,{children:[t.jsx(W,{}),t.jsx(F,{ref:o,className:n("fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg",e),...a})]}));V.displayName=F.displayName;const m=({className:e,...a})=>t.jsx("div",{className:n("flex flex-col space-y-2 text-center sm:text-left",e),...a});m.displayName="AlertDialogHeader";const Y=({className:e,...a})=>t.jsx("div",{className:n("flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",e),...a});Y.displayName="AlertDialogFooter";const q=l.forwardRef(({className:e,...a},o)=>t.jsx(L,{ref:o,className:n("text-lg font-semibold",e),...a}));q.displayName=L.displayName;const J=l.forwardRef(({className:e,...a},o)=>t.jsx(k,{ref:o,className:n("text-sm text-muted-foreground",e),...a}));J.displayName=k.displayName;const K=l.forwardRef(({className:e,...a},o)=>t.jsx(H,{ref:o,className:n(_(),e),...a}));K.displayName=H.displayName;const Q=l.forwardRef(({className:e,...a},o)=>t.jsx(z,{ref:o,className:n(_({variant:"outline"}),"mt-2 sm:mt-0",e),...a}));Q.displayName=z.displayName;try{m.displayName="AlertDialogHeader",m.__docgenInfo={description:"",displayName:"AlertDialogHeader",props:{}}}catch{}const Fe={title:"BlackBox/AlertDialog",component:G,parameters:{layout:"centered"},tags:["autodocs"]},g={render:()=>t.jsxs(G,{children:[t.jsx(Ne,{children:t.jsx(ce,{variant:"outline",children:"Show Dialog"})}),t.jsxs(V,{children:[t.jsxs(m,{children:[t.jsx(q,{children:"Are you absolutely sure?"}),t.jsx(J,{children:"This action cannot be undone. This will permanently delete your account and remove your data from our servers."})]}),t.jsxs(Y,{children:[t.jsx(Q,{children:"Cancel"}),t.jsx(K,{children:"Continue"})]})]})]})};var D,v,x;g.parameters={...g.parameters,docs:{...(D=g.parameters)==null?void 0:D.docs,source:{originalSource:`{
  render: () => <AlertDialog>
      <AlertDialogTrigger>
        <Button variant="outline">Show Dialog</Button>
      </AlertDialogTrigger>
      <AlertDialogContent>
        <AlertDialogHeader>
          <AlertDialogTitle>Are you absolutely sure?</AlertDialogTitle>
          <AlertDialogDescription>
            This action cannot be undone. This will permanently delete your
            account and remove your data from our servers.
          </AlertDialogDescription>
        </AlertDialogHeader>
        <AlertDialogFooter>
          <AlertDialogCancel>Cancel</AlertDialogCancel>
          <AlertDialogAction>Continue</AlertDialogAction>
        </AlertDialogFooter>
      </AlertDialogContent>
    </AlertDialog>
}`,...(x=(v=g.parameters)==null?void 0:v.docs)==null?void 0:x.source}}};const He=["Default"];export{g as Default,He as __namedExportsOrder,Fe as default};
